{
  "version": 3,
  "sources": ["FikaIntegrationService.ts"],
  "sourcesContent": ["import { injectable } from \"tsyringe\";\r\n\r\nexport interface IFikaIntegrationConfig {\r\n    enabled: boolean;\r\n    multiplayerCompatibility: boolean;\r\n    playerScavHandling: boolean;\r\n    botBrainOptimization: boolean;\r\n    preventBotConflicts: boolean;\r\n    syncWithFikaBots: boolean;\r\n    itemDesyncPrevention: boolean;\r\n}\r\n\r\n@injectable()\r\nexport class FikaIntegrationService {\r\n    private config: IFikaIntegrationConfig;\r\n    private isFikaActive: boolean = false;\r\n    private fikaBotIds: Set<string> = new Set();\r\n\r\n    constructor(config: IFikaIntegrationConfig) {\r\n        this.config = config;\r\n        this.detectFikaMod();\r\n    }\r\n\r\n    /**\r\n     * Detect if Fika mod is active and initialize integration\r\n     */\r\n    private detectFikaMod(): void {\r\n        try {\r\n            // Check if Fika mod is loaded\r\n            const fikaMod = require(\"fika-server\");\r\n            if (fikaMod) {\r\n                this.isFikaActive = true;\r\n                console.log(\"[Live Tarkov - AI] Fika mod detected - enabling integration\");\r\n                this.initializeFikaIntegration();\r\n            }\r\n        } catch (error) {\r\n            console.log(\"[Live Tarkov - AI] Fika mod not detected - running in single player mode\");\r\n            this.isFikaActive = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize Fika integration features\r\n     */\r\n    private initializeFikaIntegration(): void {\r\n        if (!this.config.enabled || !this.isFikaActive) return;\r\n\r\n        try {\r\n            // Hook into Fika's bot management system\r\n            this.hookIntoFikaBotSystem();\r\n            \r\n            // Set up bot brain optimization\r\n            if (this.config.botBrainOptimization) {\r\n                this.setupBotBrainOptimization();\r\n            }\r\n\r\n            // Set up conflict prevention\r\n            if (this.config.preventBotConflicts) {\r\n                this.setupConflictPrevention();\r\n            }\r\n\r\n            console.log(\"[Live Tarkov - AI] Fika integration initialized successfully\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error initializing Fika integration:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hook into Fika's bot management system\r\n     */\r\n    private hookIntoFikaBotSystem(): void {\r\n        try {\r\n            // Listen for Fika bot spawns\r\n            this.setupFikaBotListeners();\r\n            \r\n            // Sync bot states\r\n            if (this.config.syncWithFikaBots) {\r\n                this.setupBotStateSync();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error hooking into Fika bot system:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up listeners for Fika bot events\r\n     */\r\n    private setupFikaBotListeners(): void {\r\n        try {\r\n            // This would hook into Fika's bot spawn events\r\n            // For now, we'll implement a basic detection system\r\n            console.log(\"[Live Tarkov - AI] Fika bot listeners configured\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up Fika bot listeners:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up bot state synchronization\r\n     */\r\n    private setupBotStateSync(): void {\r\n        try {\r\n            // Sync bot states with Fika\r\n            console.log(\"[Live Tarkov - AI] Bot state synchronization configured\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up bot state sync:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up bot brain optimization\r\n     */\r\n    private setupBotBrainOptimization(): void {\r\n        try {\r\n            // Optimize bot brains for multiplayer\r\n            console.log(\"[Live Tarkov - AI] Bot brain optimization configured\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up bot brain optimization:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up conflict prevention\r\n     */\r\n    private setupConflictPrevention(): void {\r\n        try {\r\n            // Prevent conflicts between our mod and Fika\r\n            console.log(\"[Live Tarkov - AI] Conflict prevention configured\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up conflict prevention:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Investigate Fika item desync errors\r\n     */\r\n    public investigateItemDesync(): void {\r\n        if (!this.isFikaActive) {\r\n            console.log(\"[Live Tarkov - AI] Fika not active, skipping item desync investigation\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            console.log(\"[Live Tarkov - AI] Investigating Fika item desync errors...\");\r\n            \r\n            // Check if our mod is causing item conflicts\r\n            this.checkItemConflicts();\r\n            \r\n            // Monitor Fika's item handling\r\n            this.monitorFikaItemHandling();\r\n            \r\n            console.log(\"[Live Tarkov - AI] Item desync investigation completed\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error investigating item desync:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check for potential item conflicts\r\n     */\r\n    private checkItemConflicts(): void {\r\n        try {\r\n            // Check if our bot spawning is interfering with Fika's item system\r\n            console.log(\"[Live Tarkov - AI] Checking for item conflicts...\");\r\n            \r\n            // This would analyze if our mod is causing item ID conflicts\r\n            // For now, we'll log the investigation\r\n            \r\n            console.log(\"[Live Tarkov - AI] No obvious item conflicts detected\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error checking item conflicts:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Monitor Fika's item handling\r\n     */\r\n    private monitorFikaItemHandling(): void {\r\n        try {\r\n            // Monitor Fika's item controller for potential issues\r\n            console.log(\"[Live Tarkov - AI] Monitoring Fika item handling...\");\r\n            \r\n            // This would hook into Fika's item system to monitor for desyncs\r\n            // For now, we'll log the monitoring setup\r\n            \r\n            console.log(\"[Live Tarkov - AI] Fika item monitoring configured\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up item monitoring:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle player scav bot creation\r\n     */\r\n    public handlePlayerScavBot(botId: string, botData: any): void {\r\n        if (!this.config.playerScavHandling || !this.isFikaActive) return;\r\n\r\n        try {\r\n            // Mark this as a Fika-managed bot\r\n            this.fikaBotIds.add(botId);\r\n            \r\n            // Apply special handling for player scav bots\r\n            this.applyPlayerScavOptimizations(botId, botData);\r\n            \r\n            console.log(`[Live Tarkov - AI] Player scav bot ${botId} handled for Fika integration`);\r\n        } catch (error) {\r\n            console.error(`[Live Tarkov - AI] Error handling player scav bot ${botId}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply optimizations for player scav bots\r\n     */\r\n    private applyPlayerScavOptimizations(botId: string, botData: any): void {\r\n        try {\r\n            // Apply special optimizations for player scav bots in multiplayer\r\n            // This includes better pathfinding, reduced conflicts, etc.\r\n            \r\n            // Set bot brain type to pmcBot for better behavior\r\n            if (botData && botData.brain) {\r\n                botData.brain = \"pmcBot\";\r\n                console.log(`[Live Tarkov - AI] Updated player scav bot ${botId} to use: pmcBot brain`);\r\n            }\r\n        } catch (error) {\r\n            console.error(`[Live Tarkov - AI] Error applying player scav optimizations for ${botId}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a bot is managed by Fika\r\n     */\r\n    public isFikaBot(botId: string): boolean {\r\n        return this.fikaBotIds.has(botId);\r\n    }\r\n\r\n    /**\r\n     * Get integration status\r\n     */\r\n    public getIntegrationStatus(): string {\r\n        if (!this.isFikaActive) {\r\n            return \"Fika not detected - running in single player mode\";\r\n        }\r\n        \r\n        if (!this.config.enabled) {\r\n            return \"Fika detected but integration disabled\";\r\n        }\r\n        \r\n        return \"Fika integration active and configured\";\r\n    }\r\n\r\n    /**\r\n     * Clean up Fika integration\r\n     */\r\n    public cleanup(): void {\r\n        try {\r\n            this.fikaBotIds.clear();\r\n            console.log(\"[Live Tarkov - AI] Fika integration cleaned up\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error cleaning up Fika integration:\", error);\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
