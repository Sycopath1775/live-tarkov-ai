{
  "version": 3,
  "sources": ["SainIntegrationService.ts"],
  "sourcesContent": ["import { injectable } from \"tsyringe\";\r\n\r\nexport interface ISainIntegrationConfig {\r\n    enabled: boolean;\r\n    useSainBotBrains: boolean;\r\n    syncBotBehavior: boolean;\r\n    preventConflicts: boolean;\r\n    enhancedPathfinding: boolean;\r\n    tacticalMovement: boolean;\r\n    scavBehavior: {\r\n        annoyingButNotDeadly: boolean;\r\n        reducedAccuracy: number;\r\n        avoidHeadshots: boolean;\r\n        preventStomachBlacking: boolean;\r\n    };\r\n    pmcBehavior: {\r\n        tacticalAndTough: boolean;\r\n        realisticAccuracy: number;\r\n        avoidInstaKills: boolean;\r\n        properGearUsage: boolean;\r\n    };\r\n    bossBehavior: {\r\n        toughButNotInstaKill: boolean;\r\n        avoidHeadshotSpam: boolean;\r\n        realisticDifficulty: boolean;\r\n        properMechanics: boolean;\r\n    };\r\n}\r\n\r\n@injectable()\r\nexport class SainIntegrationService {\r\n    private config: ISainIntegrationConfig;\r\n    private isSainActive: boolean = false;\r\n    private sainBotIds: Set<string> = new Set();\r\n    private behaviorOverrides: Map<string, any> = new Map();\r\n\r\n    constructor(config: ISainIntegrationConfig) {\r\n        this.config = config;\r\n        this.detectSainMod();\r\n    }\r\n\r\n    /**\r\n     * Detect if SAIN mod is active and initialize integration\r\n     */\r\n    private detectSainMod(): void {\r\n        try {\r\n            // Check if SAIN mod is loaded\r\n            const sainMod = require(\"zSolarint-SAIN-ServerMod\");\r\n            if (sainMod) {\r\n                this.isSainActive = true;\r\n                console.log(\"[Live Tarkov - AI] SAIN mod detected - enabling integration\");\r\n                this.initializeSainIntegration();\r\n            }\r\n        } catch (error) {\r\n            console.log(\"[Live Tarkov - AI] SAIN mod not detected - running without SAIN integration\");\r\n            this.isSainActive = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize SAIN integration features\r\n     */\r\n    private initializeSainIntegration(): void {\r\n        if (!this.config.enabled || !this.isSainActive) return;\r\n\r\n        try {\r\n            // Hook into SAIN's bot management system\r\n            this.hookIntoSainBotSystem();\r\n            \r\n            // Set up behavior synchronization\r\n            if (this.config.syncBotBehavior) {\r\n                this.setupBehaviorSynchronization();\r\n            }\r\n\r\n            // Set up enhanced pathfinding\r\n            if (this.config.enhancedPathfinding) {\r\n                this.setupEnhancedPathfinding();\r\n            }\r\n\r\n            // Set up tactical movement\r\n            if (this.config.tacticalMovement) {\r\n                this.setupTacticalMovement();\r\n            }\r\n\r\n            console.log(\"[Live Tarkov - AI] SAIN integration initialized successfully\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error initializing SAIN integration:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hook into SAIN's bot management system\r\n     */\r\n    private hookIntoSainBotSystem(): void {\r\n        try {\r\n            // Listen for SAIN bot events\r\n            this.setupSainBotListeners();\r\n            \r\n            // Sync bot states\r\n            this.setupBotStateSync();\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error hooking into SAIN bot system:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up listeners for SAIN bot events\r\n     */\r\n    private setupSainBotListeners(): void {\r\n        try {\r\n            // This would hook into SAIN's bot spawn and behavior events\r\n            // For now, we'll implement a basic detection system\r\n            console.log(\"[Live Tarkov - AI] SAIN bot listeners configured\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up SAIN bot listeners:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up bot state synchronization\r\n     */\r\n    private setupBotStateSync(): void {\r\n        try {\r\n            // Sync bot states between our mod and SAIN\r\n            console.log(\"[Live Tarkov - AI] Bot state sync configured with SAIN\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up bot state sync:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up behavior synchronization\r\n     */\r\n    private setupBehaviorSynchronization(): void {\r\n        try {\r\n            // Synchronize bot behaviors with SAIN\r\n            this.setupScavBehaviorSync();\r\n            this.setupPmcBehaviorSync();\r\n            this.setupBossBehaviorSync();\r\n            \r\n            console.log(\"[Live Tarkov - AI] Behavior synchronization configured with SAIN\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up behavior synchronization:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up scav behavior synchronization\r\n     */\r\n    private setupScavBehaviorSync(): void {\r\n        try {\r\n            if (this.config.scavBehavior.annoyingButNotDeadly) {\r\n                // Configure scavs to be annoying but not deadly\r\n                this.configureScavBehavior();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up scav behavior sync:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up PMC behavior synchronization\r\n     */\r\n    private setupPmcBehaviorSync(): void {\r\n        try {\r\n            if (this.config.pmcBehavior.tacticalAndTough) {\r\n                // Configure PMCs to be tactical and tough\r\n                this.configurePmcBehavior();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up PMC behavior sync:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up boss behavior synchronization\r\n     */\r\n    private setupBossBehaviorSync(): void {\r\n        try {\r\n            if (this.config.bossBehavior.toughButNotInstaKill) {\r\n                // Configure bosses to be tough but not insta-kill\r\n                this.configureBossBehavior();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up boss behavior sync:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configure scav behavior for SAIN integration\r\n     */\r\n    private configureScavBehavior(): void {\r\n        try {\r\n            // Apply scav behavior overrides\r\n            const scavOverrides = {\r\n                accuracy: this.config.scavBehavior.reducedAccuracy,\r\n                avoidHeadshots: this.config.scavBehavior.avoidHeadshots,\r\n                preventStomachBlacking: this.config.scavBehavior.preventStomachBlacking,\r\n                behavior: \"annoying\"\r\n            };\r\n\r\n            this.behaviorOverrides.set(\"scav\", scavOverrides);\r\n            console.log(\"[Live Tarkov - AI] Scav behavior configured for SAIN integration\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error configuring scav behavior:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configure PMC behavior for SAIN integration\r\n     */\r\n    private configurePmcBehavior(): void {\r\n        try {\r\n            // Apply PMC behavior overrides\r\n            const pmcOverrides = {\r\n                accuracy: this.config.pmcBehavior.realisticAccuracy,\r\n                avoidInstaKills: this.config.pmcBehavior.avoidInstaKills,\r\n                properGearUsage: this.config.pmcBehavior.properGearUsage,\r\n                behavior: \"tactical\"\r\n            };\r\n\r\n            this.behaviorOverrides.set(\"pmc\", pmcOverrides);\r\n            console.log(\"[Live Tarkov - AI] PMC behavior configured for SAIN integration\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error configuring PMC behavior:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Configure boss behavior for SAIN integration\r\n     */\r\n    private configureBossBehavior(): void {\r\n        try {\r\n            // Apply boss behavior overrides\r\n            const bossOverrides = {\r\n                avoidHeadshotSpam: this.config.bossBehavior.avoidHeadshotSpam,\r\n                realisticDifficulty: this.config.bossBehavior.realisticDifficulty,\r\n                properMechanics: this.config.bossBehavior.properMechanics,\r\n                behavior: \"boss\"\r\n            };\r\n\r\n            this.behaviorOverrides.set(\"boss\", bossOverrides);\r\n            console.log(\"[Live Tarkov - AI] Boss behavior configured for SAIN integration\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error configuring boss behavior:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up enhanced pathfinding\r\n     */\r\n    private setupEnhancedPathfinding(): void {\r\n        try {\r\n            // Integrate with SAIN's enhanced pathfinding system\r\n            console.log(\"[Live Tarkov - AI] Enhanced pathfinding configured with SAIN\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up enhanced pathfinding:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up tactical movement\r\n     */\r\n    private setupTacticalMovement(): void {\r\n        try {\r\n            // Integrate with SAIN's tactical movement system\r\n            console.log(\"[Live Tarkov - AI] Tactical movement configured with SAIN\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error setting up tactical movement:\", error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply behavior overrides to a bot\r\n     */\r\n    public applyBehaviorOverrides(botId: string, botType: string, botData: any): void {\r\n        if (!this.config.enabled || !this.isSainActive) return;\r\n\r\n        try {\r\n            const overrides = this.behaviorOverrides.get(botType);\r\n            if (overrides) {\r\n                // Apply the behavior overrides\r\n                this.applyOverridesToBot(botId, botData, overrides);\r\n                console.log(`[Live Tarkov - AI] Applied SAIN behavior overrides to bot ${botId}`);\r\n            }\r\n        } catch (error) {\r\n            console.error(`[Live Tarkov - AI] Error applying behavior overrides to bot ${botId}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply overrides to a bot\r\n     */\r\n    private applyOverridesToBot(botId: string, botData: any, overrides: any): void {\r\n        try {\r\n            // Apply accuracy overrides\r\n            if (overrides.accuracy !== undefined) {\r\n                botData.accuracy = overrides.accuracy;\r\n            }\r\n\r\n            // Apply behavior-specific overrides\r\n            if (overrides.behavior) {\r\n                botData.behaviorType = overrides.behavior;\r\n            }\r\n\r\n            // Mark this as a SAIN-managed bot\r\n            this.sainBotIds.add(botId);\r\n        } catch (error) {\r\n            console.error(`[Live Tarkov - AI] Error applying overrides to bot ${botId}:`, error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if a bot is managed by SAIN\r\n     */\r\n    public isSainBot(botId: string): boolean {\r\n        return this.sainBotIds.has(botId);\r\n    }\r\n\r\n    /**\r\n     * Get SAIN integration status\r\n     */\r\n    public getIntegrationStatus(): any {\r\n        return {\r\n            enabled: this.config.enabled,\r\n            sainActive: this.isSainActive,\r\n            useSainBotBrains: this.config.useSainBotBrains,\r\n            syncBotBehavior: this.config.syncBotBehavior,\r\n            enhancedPathfinding: this.config.enhancedPathfinding,\r\n            tacticalMovement: this.config.tacticalMovement,\r\n            managedBotCount: this.sainBotIds.size,\r\n            behaviorOverrides: this.behaviorOverrides.size\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Clean up SAIN integration\r\n     */\r\n    public cleanup(): void {\r\n        try {\r\n            this.sainBotIds.clear();\r\n            this.behaviorOverrides.clear();\r\n            console.log(\"[Live Tarkov - AI] SAIN integration cleaned up\");\r\n        } catch (error) {\r\n            console.error(\"[Live Tarkov - AI] Error cleaning up SAIN integration:\", error);\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": "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",
  "names": []
}
